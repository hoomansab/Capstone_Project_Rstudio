---
title: "Bayes Class"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}

library(ggplot2)


binom_pmf <- function(n, pi) {
  y_vals <- 0:n
  pmf <- dbinom(y_vals, size = n, prob = pi)
  data.frame(y = y_vals, pmf = pmf)
}


n <- 6
pi_values <- c(0.2, 0.5, 0.8)
y_highlight <- 1  


plot_data <- do.call(rbind, lapply(pi_values, function(pi) {
  df <- binom_pmf(n, pi)
  df$pi <- pi
  return(df)
}))


ggplot(plot_data, aes(x = factor(y), y = pmf, group = pi)) +
  geom_bar(stat = "identity", fill = "gray", color = "black") +
  facet_wrap(~pi, labeller = label_bquote(pi == .(pi))) +
  geom_bar(data = subset(plot_data, y == y_highlight), 
           aes(x = factor(y), y = pmf), 
           stat = "identity", fill = "black", color = "black") +
  labs(x = "Y (Number of Wins)", y = expression(f(y | pi)), 
       title = "Conditional pmf of Bin(6, pi) for different values of pi") +
  theme_minimal()

```

You can add options to executable code like this

```{r}
# Define the likelihood function
likelihood <- function(pi) {
  6 * pi * (1 - pi)^5
}

# Generate a sequence of possible values for pi between 0 and 1
pi_vals <- seq(0, 1, by = 0.01)

# Calculate the likelihood for each value of pi
likelihood_vals <- sapply(pi_vals, likelihood)

# Plot the likelihood function
library(ggplot2)
df <- data.frame(pi = pi_vals, likelihood = likelihood_vals)
ggplot(df, aes(x = pi, y = likelihood)) +
  geom_line(color = "blue") +
  labs(title = "Likelihood of Kasparov Winning 1 Game as a Function of π",
       x = "π (Kasparov's Probability of Winning a Game)", 
       y = "Likelihood") +
  theme_minimal()

```
